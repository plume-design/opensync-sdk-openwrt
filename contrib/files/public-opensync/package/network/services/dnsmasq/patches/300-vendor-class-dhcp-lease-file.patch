Add vendor-class to dhcp lease file.

Related JIRA: PIR-4091

Index: dnsmasq-2.80/src/dnsmasq.h
===================================================================
--- dnsmasq-2.80.orig/src/dnsmasq.h
+++ dnsmasq-2.80/src/dnsmasq.h
@@ -704,6 +704,7 @@ struct dhcp_lease {
   char *hostname, *fqdn; /* name from client-hostname option or config */
   char *old_hostname;    /* hostname before it moved to another lease */
   char *fingerprint;     /* DHCP fingerprint                          */
+  char *vendor_class;    /* DHCP vendor class                         */
   int flags;
   time_t expires;        /* lease expiry */
 #ifdef HAVE_BROKEN_RTC
@@ -1408,6 +1409,7 @@ void lease_add_extradata(struct dhcp_lea
 			 unsigned int len, int delim);
 #endif
 void lease_add_fingerprint(struct dhcp_lease *lease, unsigned char *req_options);
+void lease_add_vendor_class(struct dhcp_lease *lease, unsigned char *data, unsigned int len);
 #endif
 
 /* rfc2131.c */
Index: dnsmasq-2.80/src/lease.c
===================================================================
--- dnsmasq-2.80.orig/src/lease.c
+++ dnsmasq-2.80/src/lease.c
@@ -25,6 +25,7 @@ static int dns_dirty, file_dirty, leases
 static int read_leases(time_t now, FILE *leasestream)
 {
   char finger_buf[SZ_FINGERPRINT];
+  char vendor_buf[256];
   unsigned long ei;
   union all_addr addr;
   struct dhcp_lease *lease;
@@ -60,8 +61,8 @@ static int read_leases(time_t now, FILE
 	  }
 #endif
 	
-	if (fscanf(leasestream, " %64s %255s %255s %764s",
-		   daemon->namebuff, daemon->dhcp_buff, finger_buf, daemon->packet) != 3)
+	if (fscanf(leasestream, " %64s %255s %255s \"%255[^\"]\" %764s",
+		   daemon->namebuff, daemon->dhcp_buff, finger_buf, vendor_buf, daemon->packet) != 3)
 	  {
 	    my_syslog(MS_DHCP | LOG_WARNING, _("ignoring invalid line in lease database: %s %s %s %s ..."),
 		      daemon->dhcp_buff3, daemon->dhcp_buff2,
@@ -125,6 +126,9 @@ static int read_leases(time_t now, FILE
 	      strlcpy(lease->fingerprint, finger_buf, SZ_FINGERPRINT);
 	  }
 
+	if (strcmp(vendor_buf, "*") != 0)
+	   lease->vendor_class = strdup(vendor_buf);
+
 	ei = atol(daemon->dhcp_buff3);
 
 #ifdef HAVE_BROKEN_RTC
@@ -320,6 +324,8 @@ void lease_update_file(time_t now)
 	  ourprintf(&err, " %s ", daemon->addrbuff);
 	  ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
 	  ourprintf(&err, "%s ", lease->fingerprint ? lease->fingerprint : "*");
+	  // Here we use double quotes since vendor-class can contain spaces
+	  ourprintf(&err, "\"%s\" ", lease->vendor_class ? lease->vendor_class : "*");
 	  	  
 	  if (lease->clid && lease->clid_len != 0)
 	    {
@@ -358,6 +364,8 @@ void lease_update_file(time_t now)
 	      ourprintf(&err, "%s ", lease->hostname ? lease->hostname : "*");
 	      /* DHCPv6 doesn't support fingerprinting, add a dummy entry */
 	      ourprintf(&err, "%s ", "*");
+	      // Here we use double quotes since vendor-class can contain spaces
+	      ourprintf(&err, "\"%s\" ", lease->vendor_class ? lease->vendor_class : "*");
 	      
 	      if (lease->clid && lease->clid_len != 0)
 		{
@@ -608,6 +616,12 @@ void lease_prune(struct dhcp_lease *targ
               lease->fingerprint = NULL;
             }
 
+          if (lease->vendor_class)
+            {
+              free(lease->vendor_class);
+              lease->vendor_class = NULL;
+            }
+
 	  daemon->metrics[lease->addr.s_addr ? METRIC_LEASES_PRUNED_4 : METRIC_LEASES_PRUNED_6]++;
 
  	  *up = lease->next; /* unlink */
@@ -1291,6 +1305,30 @@ void lease_add_fingerprint(struct dhcp_l
   }
 }
 
+void lease_add_vendor_class(struct dhcp_lease *lease, unsigned char *data, unsigned int len)
+{
+  unsigned int i;
+
+  if (lease->vendor_class != NULL)
+  {
+    free(lease->vendor_class);
+    lease->vendor_class = NULL;
+  }
+
+  if (len > 0)
+  {
+    lease->vendor_class = whine_malloc(len + 1);
+    memcpy(lease->vendor_class, data, len);
+    lease->vendor_class[len]    = '\0';
+
+    // Escape quotes (") and 0 in vendor-class by replacing them with space just to be safe
+    for (i = 0; i < len; i++)
+    {
+        if (lease->vendor_class[i] == '\"' || lease->vendor_class[i] == '\0')
+            lease->vendor_class[i] = ' ';
+    }
+  }
+}
 
 #endif
 	  
Index: dnsmasq-2.80/src/rfc2131.c
===================================================================
--- dnsmasq-2.80.orig/src/rfc2131.c
+++ dnsmasq-2.80/src/rfc2131.c
@@ -1299,6 +1299,12 @@ size_t dhcp_reply(struct dhcp_context *c
 	    }
 	}
 
+      /* get vendor-class information           */
+      if (lease && (opt = option_find(mess, sz, OPTION_VENDOR_ID, 1)))
+    {
+      lease_add_vendor_class(lease, option_ptr(opt, 0), option_len(opt));
+    }
+
       /* get options information                */
       if (lease)
         {
